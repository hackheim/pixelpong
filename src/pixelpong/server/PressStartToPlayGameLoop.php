<?php


namespace stigsb\pixelpong\server;


class PressStartToPlayGameLoop implements GameLoop
{
    private static $PRESS_START = '
...............................................
...............................................
.........####..####..#####..####..####.........
.........#...#.#...#.#.....#.....#.............
.........####..####..###....###...###..........
.........#.....#...#.#.........#.....#.........
.........#.....#...#.#####.####..####..........
...............................................
..........####.#####..###..####..#####.........
.........#.......#...#...#.#...#...#...........
..........###....#...#####.####....#...........
.............#...#...#...#.#...#...#...........
.........####....#...#...#.#...#...#...........
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
';

    private static $TO_PLAY = '
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
...............................................
..................#####..###...................
....................#...#...#..................
....................#...#...#..................
....................#...#...#..................
....................#....###...................
...............................................
............####..#......###..#...#............
............#...#.#.....#...#.#...#............
............####..#.....#####..#.#.............
............#.....#.....#...#...#..............
............#.....#####.#...#...#..............
...............................................
...............................................
';

    /** @var FrameBuffer */
    private $frameBuffer;

    /** @var \SplFixedArray */
    private $pressPlayFrame;

    /** @var int */
    private $previousTime;

    private static $colorMap = [
        '#' => Color::WHITE,
        '-' => Color::LIGHT_GREY,
    ];

    public function __construct(FrameBuffer $frameBuffer)
    {
        $this->frameBuffer = $frameBuffer;
        $this->pressStartFrame = $this->stringToFrame(self::$PRESS_START);
        $this->toPlayFrame = $this->stringToFrame(self::$TO_PLAY);
    }

    /**
     * This method is called when the game enters this game loop.
     * This is where you would replace the default frame among other things.
     */
    public function onEnter()
    {
        $this->frameBuffer->setBlankFrame($this->pressPlayFrame);
        $this->previousTime = time();
    }

    public function onFrameUpdate()
    {
        $now = time();
        if ($now > $this->previousTime) {
            switch ($now % 4) {
                case 0:
                    $this->frameBuffer->setBlankFrame($this->pressStartFrame);
                    break;
                case 2:
                    $this->frameBuffer->setBlankFrame($this->toPlayFrame);
                    break;
            }
        }
        $this->previousTime = $now;
    }

    /**
     * An input event occurs (joystick action).
     * @param Event $event
     */
    public function onEvent(Event $event)
    {
        // TODO: Implement onEvent() method.
    }

    protected function stringToFrame($string)
    {
        $lines = explode("\n", trim($string));
        $fb = new OffscreenFrameBuffer($this->frameBuffer->getWidth(), $this->frameBuffer->getHeight());
        foreach ($lines as $y => $line) {
            for ($x = 0; $x < strlen($line); ++$x) {
                if (isset(self::$colorMap[$line[$x]])) {
                    $fb->setPixel($x, $y, self::$colorMap[$line[$x]]);
                }
            }
        }
        return $fb->getFrame();
    }

}
